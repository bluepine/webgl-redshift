var pg = require('pg');

/**
 * Redshift constructor function
 * @param {Object} config  connection object with {host, port, database, user, password}
 * @param {Object} options {rawConnection: <bool>}
 */
var Redshift = function(config, options){
  if(config && typeof config === 'string' || typeof config === 'object'){
    var that = this;
    that.config = config;

    if(options && options.rawConnection){
      that.rawConnection = true;
      var client = new pg.Client(config);
      that.client = client;
    }
    else{
      // use connection pooling from pg module
      pg.connect(config, function(err, client, done) {
        if(err) {
          done(client); //https://github.com/brianc/node-postgres/wiki/Example
          throw new Error('error fetching client from pool', err);
        }
        else {
          // store the client instance to make queries with
          that.client = client;

          // store done to call back so it can return connection back to pool
          // https://github.com/brianc/node-postgres#client-pooling
          that.done = done;
        }
      });
    }
  }
  else{
    throw new Error('invalid Redshift connection configuration');
  }
};

module.exports = Redshift;